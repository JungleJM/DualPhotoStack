name: Build and Package DPS Electron App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch: [x64, arm64]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: electron-app/package-lock.json
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libxss1 libnss3-dev libasound2-dev
        
    - name: Install Node.js dependencies
      working-directory: ./electron-app
      run: |
        npm install --verbose
        echo "Dependencies installed successfully" >> ../build.log
        
    - name: Run tests
      working-directory: ./electron-app
      run: |
        echo "Running tests..." >> ../build.log
        npm test 2>&1 | tee -a ../build.log || echo "Tests failed or not configured" >> ../build.log
        
    - name: Build Electron app
      working-directory: ./electron-app
      run: |
        echo "Starting Electron build for ${{ matrix.arch }}..." >> ../build.log
        echo "Build started at: $(date)" >> ../build.log
        npm run build -- --linux --${{ matrix.arch }} 2>&1 | tee -a ../build.log
        echo "Build completed at: $(date)" >> ../build.log
        
    - name: List build artifacts
      working-directory: ./electron-app
      run: |
        echo "Build artifacts:" >> ../build.log
        find dist -type f -name "*.AppImage" -o -name "*.deb" | tee -a ../build.log
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs-linux-${{ matrix.arch }}
        path: build.log
        retention-days: 30
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: dps-linux-${{ matrix.arch }}-binaries
        path: |
          electron-app/dist/*.AppImage
          electron-app/dist/*.deb
        retention-days: 30

  build-summary:
    runs-on: ubuntu-latest
    needs: [build-linux]
    if: always()
    
    steps:
    - name: Download all build logs
      uses: actions/download-artifact@v4
      with:
        pattern: build-logs-*
        merge-multiple: true
        
    - name: Create build summary
      run: |
        echo "# DPS Build Summary - $(date)" > build-summary.md
        echo "" >> build-summary.md
        echo "## Build Status" >> build-summary.md
        echo "- Commit: ${{ github.sha }}" >> build-summary.md
        echo "- Branch: ${{ github.ref_name }}" >> build-summary.md
        echo "- Triggered by: ${{ github.event_name }}" >> build-summary.md
        echo "" >> build-summary.md
        echo "## Build Logs" >> build-summary.md
        echo '```' >> build-summary.md
        cat *.log >> build-summary.md 2>/dev/null || echo "No logs found" >> build-summary.md
        echo '```' >> build-summary.md
        
    - name: Upload build summary
      uses: actions/upload-artifact@v4
      with:
        name: build-summary
        path: build-summary.md
        retention-days: 90